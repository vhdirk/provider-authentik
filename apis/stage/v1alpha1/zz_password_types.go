/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PasswordInitParameters struct {

	// (Boolean) Defaults to false.
	// Defaults to `false`.
	AllowShowPassword *bool `json:"allowShowPassword,omitempty" tf:"allow_show_password,omitempty"`

	// (List of String)
	Backends []*string `json:"backends,omitempty" tf:"backends,omitempty"`

	// (String)
	// +crossplane:generate:reference:type=github.com/vhdirk/provider-authentik/apis/authentik/v1alpha1.Flow
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("uuid",true)
	ConfigureFlow *string `json:"configureFlow,omitempty" tf:"configure_flow,omitempty"`

	// Reference to a Flow in authentik to populate configureFlow.
	// +kubebuilder:validation:Optional
	ConfigureFlowRef *v1.Reference `json:"configureFlowRef,omitempty" tf:"-"`

	// Selector for a Flow in authentik to populate configureFlow.
	// +kubebuilder:validation:Optional
	ConfigureFlowSelector *v1.Selector `json:"configureFlowSelector,omitempty" tf:"-"`

	// (Number) Defaults to 5.
	// Defaults to `5`.
	FailedAttemptsBeforeCancel *float64 `json:"failedAttemptsBeforeCancel,omitempty" tf:"failed_attempts_before_cancel,omitempty"`

	// (String)
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type PasswordObservation struct {

	// (Boolean) Defaults to false.
	// Defaults to `false`.
	AllowShowPassword *bool `json:"allowShowPassword,omitempty" tf:"allow_show_password,omitempty"`

	// (List of String)
	Backends []*string `json:"backends,omitempty" tf:"backends,omitempty"`

	// (String)
	ConfigureFlow *string `json:"configureFlow,omitempty" tf:"configure_flow,omitempty"`

	// (Number) Defaults to 5.
	// Defaults to `5`.
	FailedAttemptsBeforeCancel *float64 `json:"failedAttemptsBeforeCancel,omitempty" tf:"failed_attempts_before_cancel,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String)
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type PasswordParameters struct {

	// (Boolean) Defaults to false.
	// Defaults to `false`.
	// +kubebuilder:validation:Optional
	AllowShowPassword *bool `json:"allowShowPassword,omitempty" tf:"allow_show_password,omitempty"`

	// (List of String)
	// +kubebuilder:validation:Optional
	Backends []*string `json:"backends,omitempty" tf:"backends,omitempty"`

	// (String)
	// +crossplane:generate:reference:type=github.com/vhdirk/provider-authentik/apis/authentik/v1alpha1.Flow
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("uuid",true)
	// +kubebuilder:validation:Optional
	ConfigureFlow *string `json:"configureFlow,omitempty" tf:"configure_flow,omitempty"`

	// Reference to a Flow in authentik to populate configureFlow.
	// +kubebuilder:validation:Optional
	ConfigureFlowRef *v1.Reference `json:"configureFlowRef,omitempty" tf:"-"`

	// Selector for a Flow in authentik to populate configureFlow.
	// +kubebuilder:validation:Optional
	ConfigureFlowSelector *v1.Selector `json:"configureFlowSelector,omitempty" tf:"-"`

	// (Number) Defaults to 5.
	// Defaults to `5`.
	// +kubebuilder:validation:Optional
	FailedAttemptsBeforeCancel *float64 `json:"failedAttemptsBeforeCancel,omitempty" tf:"failed_attempts_before_cancel,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

// PasswordSpec defines the desired state of Password
type PasswordSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PasswordParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PasswordInitParameters `json:"initProvider,omitempty"`
}

// PasswordStatus defines the observed state of Password.
type PasswordStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PasswordObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Password is the Schema for the Passwords API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,authentik}
type Password struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.backends) || (has(self.initProvider) && has(self.initProvider.backends))",message="spec.forProvider.backends is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   PasswordSpec   `json:"spec"`
	Status PasswordStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PasswordList contains a list of Passwords
type PasswordList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Password `json:"items"`
}

// Repository type metadata.
var (
	Password_Kind             = "Password"
	Password_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Password_Kind}.String()
	Password_KindAPIVersion   = Password_Kind + "." + CRDGroupVersion.String()
	Password_GroupVersionKind = CRDGroupVersion.WithKind(Password_Kind)
)

func init() {
	SchemeBuilder.Register(&Password{}, &PasswordList{})
}
